name: Weld Testing Release

on:
  pull_request:
    types:
    - closed
    paths:
    - '.github/project.yml'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{github.event.pull_request.merged == true}}
    env:
      GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}
    steps:
    - name: Retrieve project metadata
      id: metadata
      uses: radcortez/project-metadata-action@main
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        metadata-file-path: '.github/project.yml'

    - name: Checkout
      uses: actions/checkout@v4
      with:
        token: ${{secrets.RELEASE_TOKEN}}

    - name: Set up JDK 17
      uses: actions/setup-java@v4.2.1
      with:
        distribution: temurin
        java-version: 17

    - name: Maven release ${{steps.metadata.outputs.current-version}}
      run: |
        export MAVEN_OPTS="--add-opens=java.base/java.util=ALL-UNNAMED"
        java -version
        gpg --quiet --batch --yes --decrypt --passphrase="${{secrets.SECRET_PASSPHRASE}}" --output weld-sign.asc .github/release/weld-sign.asc.gpg
        gpg --quiet --batch --yes --decrypt --passphrase="${{secrets.SECRET_PASSPHRASE}}" --output maven-settings.xml .github/release/maven-settings.xml.gpg
        gpg --fast-import --no-tty --batch --yes weld-sign.asc
        git config --global user.name "Weld CI"
        git config --global user.email "weld-dev@lists.jboss.org"
        git checkout -b release
        mvn release:prepare --batch-mode -Drelease -DreleaseVersion=${{steps.metadata.outputs.current-version}} -Dtag=${{steps.metadata.outputs.current-version}} -DdevelopmentVersion=${{steps.metadata.outputs.next-version}} -s maven-settings.xml
        git checkout ${{github.base_ref}}
        git rebase release
        mvn -B release:perform -Drelease -s maven-settings.xml
        git push
        git push --tags